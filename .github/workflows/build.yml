name: build
 
on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

permissions:
  actions: read
  checks: write
  contents: none
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: write
  statuses: write

jobs:
  setup:
    runs-on: macos-11

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  build:
    runs-on: macos-11

    needs: setup

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: |
            - recursive: false
              args: [--no-frozen-lockfile, --strict-peer-dependencies]
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64

      - name: Test
        run: pnpm test

  build-ios:
    runs-on: macos-11

    needs: build

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Set Xcode version
        run: sudo xcode-select -s "/Applications/Xcode_13.2.1.app"

      - name: Show Xcode version
        run: xcodebuild -version

      - name: Import iOS CodeSign Certificates
        if: github.actor != 'dependabot[bot]'
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          create-keychain: true
          keychain-password: ${{ steps.develop-certificate.outputs.keychain-password }}
          p12-file-base64: ${{ secrets.DISTRIBUTION_CERTIFICATES_FILE_BASE64 }}
          p12-password: ${{ secrets.CERTIFICATES_PASSWORD }}

      - name: Download Provisioning Profiles
        if: github.actor != 'dependabot[bot]'
        uses: poad/apple-provisioning-profiles-downloader@v1.0.8
        with: 
          bundle-id: 'com.github.poad.example.reactjs.native.ReactNativeAppSample'
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate exportOptions.plist
        if: github.actor != 'dependabot[bot]'
        env:
          PLIST: ${{ secrets.EXPORT_OPTIONS_PLIST }}
        run: |
          touch ios/exportOptions.plist
          echo "${PLIST}" >> ios/exportOptions.plist
          cat ios/exportOptions.plist

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: |
            - recursive: false
              args: [--no-frozen-lockfile, --strict-peer-dependencies]

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64

      - name: Configure Homebrew cache
        uses: actions/cache@v3
        with:
          path: |
            ~/Library/Caches/Homebrew/foo--*
            ~/Library/Caches/Homebrew/downloads/*--foo-*
          key: brew-${{ hashFiles('.github/brew-formulae') }}
          restore-keys: brew-

      - name: Add '--no-document' to gemrc
        run: |
          echo "install: --no-document" >> ~/.gemrc
          echo "update: --no-document" >> ~/.gemrc

      - name: Update Homebrew
        run: |
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          brew update --preinstall
          cat "$(brew --repository)/Library/Taps/homebrew/homebrew-core/Formula/watchman.rb" > .github/brew-formulae
          sudo rm '/usr/local/bin/2to3'
          brew link --overwrite python@3.10
          brew upgrade || true

      - name: Setup watchman
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
        run: |
          brew install watchman
          sudo gem update

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.6
          bundler-cache: true
      - name: Cache Pods dependencies
        uses: actions/cache@v3
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Cache Xcode archive
        uses: actions/cache@v3
        with:
          path: ios/Pods
          key: ${{ runner.OS }}-archive-cache-${{ hashFiles('**/ios/ReactNativeAppSample.xcarchive') }}
          restore-keys: |
            ${{ runner.OS }}-archive-cache-

      - name: pods install
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
        working-directory: ios
        run: |
          rm -rf Podfile.lock Pods
          sudo gem install cocoapods && pod install

      - name: iOS app build
        env:
          RCT_NO_LAUNCH_PACKAGER: 1
        uses: mxcl/xcodebuild@v2
        with:
          platform: iOS
          action: build
          configuration: 
          working-directory: ios

  build-android:
    runs-on: macos-11

    needs: build

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Import Android CodeSign Certificates
        run: |
          ANDROID_CERTIFICATES_FILE_PATH=$(pwd)/android/keystore.p12
          echo "ANDROID_CERTIFICATES_FILE_PATH=${ANDROID_CERTIFICATES_FILE_PATH}" >> $GITHUB_ENV
          echo ${{ secrets.ANDROID_CERTIFICATES_FILE_BASE64 }} | base64 -D -o ${ANDROID_CERTIFICATES_FILE_PATH}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: |
            - recursive: false
              args: [--no-frozen-lockfile, --strict-peer-dependencies]

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          architecture: x64

      - uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'liberica'
          java-version: 17

      - name: Build and test for android
        env:
          DEFAULT_JVM_OPTS: -Xmx2048m -Xms512m
          GRADLE_OPTS: -Xmx2048m -Xms512m
          JAVA_OPTS: -Xmx2048m -Xms512m
        working-directory: android
        run: |
          ./gradlew assembleDebug
          ./gradlew test

  configure:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
    - name: Pull request auto merge enabler
      if: github.event_name == 'pull_request'
      uses: poad/github-pull-request-auto-merge-enable-action@v1.0.5
      with:
        pull_request_number: ${{ github.event.pull_request.number }}
        github_token: ${{ secrets.PERSONAL_TOKEN_FOR_GITHUB_ACTIONS }}
        repository: ${{ github.event.repository.name }}
        owner: ${{ github.repository_owner }}
        merge_method: SQUASH
